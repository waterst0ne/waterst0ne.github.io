<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>waterStone blog</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2022-12-16T08:50:40+03:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>waterStone</name>
   <email></email>
 </author>

 
 <entry>
   <title>Bitcoin Developer Journey</title>
   <link href="http://localhost:4000/bitcoin-dev-journey-22/"/>
   <updated>2022-12-13T03:00:00+03:00</updated>
   <id>http://localhost:4000/bitcoin-dev-journey</id>
   <content type="html">&lt;h1 id=&quot;my-journey-into-bitcoin-development&quot;&gt;My Journey into Bitcoin Development&lt;/h1&gt;

&lt;h3 id=&quot;who-am-i-&quot;&gt;Who am I ?&lt;/h3&gt;

&lt;p&gt;My name is Pedro, I reside in the USA and I‚Äôm currently pursuing a Computer Science degree. Some of my interests include Bitcoin, Programming, and Computer Science.  When I‚Äôm not studying or at the university, I focus on the acquiring skills that will allow me to continue to create and contribute to Bitcoin open-source software. And if you‚Äôre curious, when I‚Äôm on break I catch up on reading or play guitar for a few minutes every day.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2022-my-goal-become-a-bitcoin-oss-dev&quot;&gt;2022 My Goal become a Bitcoin OSS Dev&lt;/h3&gt;
&lt;p&gt;After my realization of how important Bitcoin is as a technology for society, I decided in late  2021 that I would focus on becoming a Bitcoin developer as my new year‚Äôs goal. I started the year searching for methods of how I could contribute as an open-source developer. I read the Mastering Bitcoin book, I read blogs from current Bitcoin developers. I made the attempt to learn various programming languages. About a month into the year, I realize my plan wasn‚Äôt defined enough. I decided to take some advice my brother proposed to me a few months back.&lt;/p&gt;

&lt;p&gt;My brother suggested I choose a single project instead of looking at three Bitcoin projects and try to keep up with the different programming languages.  I took his advice and updated my goals, ‚Äúlearn how to use Bitcoin Dev Kit and contribute by the end of year‚Äù.  Bitcoin Dev Kit (BDK) is an open-source library use to create Bitcoin wallet applications. I researched and read as much as I could about BDK. I also attempted the tutorials on BDK‚Äôs blog and failed terribly.  As I was learning BDK I noticed more and more knowledge gaps in my technical understanding of Bitcoin. This didn‚Äôt discourage me, it made me more curious to learn how Bitcoin functions. One day, as I‚Äôm scrolling through twitter I notice a Bitcoin meetup happening in about two weeks named  &lt;em&gt;BitDevs LA&lt;/em&gt; .  Surprisingly, BitDevs LA guest speaker that weekend happened to be Steve from the Bitcoin Dev Kit team. This was my chance to learn more about BDK and ask questions, I decided to go.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;bit-devs-la-my-first-bitcoin-meet-up&quot;&gt;Bit Devs LA, My first Bitcoin meet up&lt;/h3&gt;
&lt;p&gt;BitDevs LA was my first Bitcoin meetup, the guest speaker from Bitcoin Dev Kit gave updates on the project and also what their goals were this  year. One of their goals this year was to on-board new devs and projects.  The talk was followed by a Socratic seminar and shortly after we met up at local restaurant. I met Andrew from BitDevs LA who was nice enough to introduce me to Steve from BDK. Long story short, I asked Steve many questions on how I can start contributing. He recommended I continue reading documentation, follow the project on Github and start learning Rust, and when I was ready to contribute in any way that I could.  He also suggested that I apply to Summer of Bitcoin (Bitcoin Internship) next year since application deadline for this year was over. Please make sure to pay them a visit in sats if you happen to be in LA next time üòä.&lt;/p&gt;

&lt;p&gt;When I got home, I did a quick web search on Summer of Bitcoin and noticed the applications were still open. Even if the deadline was past the due date, I decided to create a proposal and submitted the Summer of Bitcoin application even if the due date was  past due. I thought to myself, what‚Äôs the worst they could say? No, try again next year? I applied anyway, I continued to learn more about BDK and Rust.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://bitcoindevkit.org/&quot;&gt;Bitcoin Dev Kit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bitdevsla.org/&quot;&gt;BitDevs LA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;summer-of-bitcoin-internship&quot;&gt;Summer of Bitcoin Internship&lt;/h3&gt;
&lt;p&gt;A month later, I received a message from BDK for the Summer of Bitcoin internship. I could not believe my eyes; I was accepted to intern and be a part of Summer of Bitcoin `22. I had month before the internship started, I continued learn the tools I needed to be as prepared as possibly for the internship. I continued to work every day and learn more about BDK, this was my chance to learn and contribute. I don‚Äôt think I ever took a day off; every day is a chance to become better and more efficient. You receive, what you put into anything, you reap what you sow,  ran through my head.  You can read more about my Summer of Bitcoin experience here.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.summerofbitcoin.org/sob-22-experience-bdk/&quot;&gt;‚ÄúMy Summer of Bitcoin experience with BDK‚Äù&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.summerofbitcoin.org/&quot;&gt;Summer of Bitcoin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;mini-grant-recipient&quot;&gt;Mini-grant recipient&lt;/h3&gt;
&lt;p&gt;After Summer of Bitcoin had finished, I didn‚Äôt want to stop contributing to BDK, so I continued to work on it as much time as I could.  At the time, I was working on weekends delivering for a local pizza shop. I noticed a Superlunar mini-grant post on twitter for developers. I decided to apply and was fortunate enough to receive a mini-grant to work on BDK. This allowed me to quit my weekend job, continue my journey as an entry developer for BDK, and continue to focus on school also. My latest contribution was an appendix entry for the Mastering Bitcoin Book on BDK features and a few examples of how to use the bdk-cli app for quick testing and demonstration using Bitcoin features.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tabconf-22&quot;&gt;TabConf ‚Äò22&lt;/h3&gt;
&lt;p&gt;Tabconf is the best Bitcoin conference for developers, and aspiring contributors, or anyone who wants to get involved in the Bitcoin space. I had zero plans to assist Tabconf `22, but as event was approaching I came across a Bitcoin podcast named ‚ÄúBuilding Builders‚Äù. It‚Äôs hosted by Rod @bitkite with guest speaker Stephen from Bitcoin Design, he happened to be talking about TabConf ‚Äò22. After listening to the podcast, I was convinced I had to attend TabConf.  The first day of Tabconf was named ‚ÄúBuilder day‚Äù,a day for open-source Bitcoin projects to onboard and demo their projects to individuals that want to learn how to contribute to Bitcoin OSS. On builder day, I had the opportunity to help at the Bitcoin Dev Kit table. I assisted guests with BDK questions and troubleshoot when requested. Day 2 was filled with developer focused workshops. I met so many talented and inspiring Bitcoiners at the conference, being there makes you realize how important Bitcoin is to many individuals around the globe.  Tabconf is a great place to be at if you want to learn more technical details, attend workshops, and network with some of the brightest minds in the Bitcoin space.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://2023.tabconf.com/&quot;&gt;TABCONF `23&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bitdevs-atlanta-and-terminus-electric-money-lab&quot;&gt;BitDevs Atlanta and Terminus Electric Money Lab&lt;/h3&gt;
&lt;p&gt;Before TABCONF Autumn and I had the opportunity to go to Bitdevs Atlanta as guest speakers about our Summer of Bitcoin experience. Autumn is founder of Generation Bitcoin, a community of teens learning and contributing to Bitcoin.  BitDevs ATL is a Bitcoin meetup hosted by Stephen and Bryan who are also founders of Terminus Electric Money Laboratory which is a Bitcoin and Lightning hackerspace (workspace). 
Please make sure to pay them a visit in your  sats-mobile if you happen to be in Atlanta.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://genbitcoin.org/&quot;&gt;Generation Bitcoin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://atlantabitdevs.org/&quot;&gt;BitDevs ATL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://terminus.money/&quot;&gt;Terminus Electric Money Lab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;pacific-bitcoin-22&quot;&gt;Pacific Bitcoin ‚Äò22&lt;/h3&gt;
&lt;p&gt;This year, I also had the opportunity to attend Pacific Bitcoin ‚Äò22 and let me tell you it was pure signal. Everyone I met there was working on Bitcoin, an educator, or was passionate  HODL‚Äôr and Bitcoin advocate. I was lucky  to meet a few of the Swan Team Bitcoiners who work in different areas in the Bitcoin space. It was my first time meeting the Swan Team and I can tell they are like a Bitcoin family. PB ‚Äô22 was a great experience, I had the chance to listen to many Bitcoiners perspectives, their ambitions, and their goals. What do you mean a bear market ? Bitcoiners are still building. üòä&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;pacific-bitcoin-23&quot;&gt;&lt;a href=&quot;https://www.pacificbitcoin.com/&quot;&gt;Pacific Bitcoin ‚Äò23&lt;/a&gt;&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;end-of-the-year-reflections&quot;&gt;End of the Year Reflections&lt;/h3&gt;

&lt;p&gt;This is just the beginning of my developer journey. This year has been better than I could have ever hoped for. I accomplished a lot more than I thought I would, and less than I wish I could.  There is still much to learn and contribute to in the Bitcoin space. My hope is that you are encouraged to take the leap of faith and make it your goal to contribute to Bitcoin for next year and if you can get involved in your local communities.  Whether that is through education, art, advocacy, development, ux or assisting in Bitcoin meetups. I‚Äôm still relatively new to the Bitcoin space and development, but if you have any questions feel free to reach out. If you have a passion for Bitcoin, like being challenged, and enjoy proof of work Bitcoin is for you üòä.
Until next time. 
Stay humble and stack Sats!&lt;/p&gt;

&lt;p&gt;Bitcoin Open Source Projects and Communities&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://bitcoindevkit.org/&quot;&gt;Bitcoin Dev Kit&lt;/a&gt;
&lt;a href=&quot;https://lightningdevkit.org/&quot;&gt;Lightning Dev Kit&lt;/a&gt;
&lt;a href=&quot;https://bitcoin.design/&quot;&gt;Bitcoin Design&lt;/a&gt;
&lt;a href=&quot;https://www.summerofbitcoin.org/&quot;&gt;Summer of Bitcoin&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Bitcoin Dev Kit bdk-cli-basics00</title>
   <link href="http://localhost:4000/bdk-cli-basics/"/>
   <updated>2022-12-09T03:00:00+03:00</updated>
   <id>http://localhost:4000/bdk-cli-basics</id>
   <content type="html">&lt;h2 id=&quot;how-to-use-bdk-cli-basics&quot;&gt;How to use bdk-cli basics&lt;/h2&gt;
&lt;h3 id=&quot;tutorial-goals&quot;&gt;Tutorial Goals&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;My goal for this tutorial is to introduce you to &lt;a href=&quot;https://github.com/bitcoindevkit/bdk-cli&quot;&gt;bdk-cli&lt;/a&gt;, a powerful command-line program used for Bitcoin wallet testing. You will be exposed to many of the basic techincal skills that go into creating and managing Bitcoin wallets.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you‚Äôve read most of the &lt;a href=&quot;https://github.com/bitcoinbook/bitcoinbook&quot;&gt;‚ÄúMastering Bitcoin‚Äù&lt;/a&gt; book, this tutorial could serve as a stepping stone into your Bitcoin wallet development journey.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;This short tutorial will expose you to the &lt;a href=&quot;https://docs.rs/bdk/latest/bdk/&quot;&gt;bdk library &lt;/a&gt; and the practical knowledge needed for Bitcoin wallet development.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;You can create a custom modular wallet by using the &lt;a href=&quot;https://github.com/bitcoindevkit/bdk-ffi&quot;&gt;Language Bindings&lt;/a&gt; for &lt;strong&gt;Kotlin/Java, Swift, Python&lt;/strong&gt; which enable the use of BDK‚Äôs &lt;strong&gt;Rust&lt;/strong&gt; library as an API. You can later use these similar steps to create your own Bitcoin mobile, desktop or even WebApp.
***&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;a-few-things-before-you-begin&quot;&gt;A few things before you begin:&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Run this command to clear cache.
This command is not needed if it‚Äôs your first time of using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bdk-cli.&lt;/code&gt;
This command clears the cache files located in the bdk-cli folder. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rm -rf ~/.bdk-cli/&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Three things to look out for in each step of the tutorial:
    &lt;ul&gt;
      &lt;li&gt;1) Commands for the Terminal or Shell start with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&lt;/code&gt; symbol&lt;/li&gt;
      &lt;li&gt;2) Preview of the command output. Note, not all commands will output code.&lt;/li&gt;
      &lt;li&gt;3) Preview Video of the tutorial for reference of what things should look like in action.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;outline-of-tutorial-and-installation-notes&quot;&gt;Outline of Tutorial and Installation notes:&lt;/h3&gt;

&lt;h3 id=&quot;brief-outline-of-tutorial&quot;&gt;Brief Outline of Tutorial&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Step 1: Creating a mnemonic word list + XPRV (Extended Private Key)&lt;/li&gt;
  &lt;li&gt;Step 2: Generate testnet Receive Address&lt;/li&gt;
  &lt;li&gt;Step 3: Send funds to newly generated address&lt;/li&gt;
  &lt;li&gt;Step 4: Sync Wallet&lt;/li&gt;
  &lt;li&gt;Step 5: Check Balance of Wallet&lt;/li&gt;
  &lt;li&gt;Step 6: Create a Transaction (PSBT)&lt;/li&gt;
  &lt;li&gt;Step 7: Sign the Transaction (PSBT)&lt;/li&gt;
  &lt;li&gt;Step 8: Broadcast Transaction&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;to-follow-this-tutorial-you-will-need&quot;&gt;To follow this tutorial you will need:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt; or &lt;strong&gt;macOS&lt;/strong&gt; device.&lt;/li&gt;
  &lt;li&gt;If on &lt;strong&gt;Windows&lt;/strong&gt; instructions will slightly differ.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;rust-and-cargo-installation&quot;&gt;Rust and Cargo installation:```&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl --proto &apos;=https&apos; --tlsv1.2 -sSf https://sh.rustup.rs | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;bdk-cli-installation&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bdk-cli&lt;/code&gt; installation:&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$  cargo install --features electrum  --version 0.6.0 bdk-cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;step-0-check-version-of-bdk-cli&quot;&gt;Step 0: Check Version of bdk-cli&lt;/h2&gt;

&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bdk-cli -V&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# command output preview

bdk-cli 0.5.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/IcuyeMS.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;preview-of-bdk-cli-help-menu&quot;&gt;Preview of bdk-cli help menu&lt;/h3&gt;

&lt;p&gt;$&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bdk-cli --help&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# command output preview

USAGE:
    bdk-cli [OPTIONS] &amp;lt;SUBCOMMAND&amp;gt;

FLAGS:
    -h, --help       
            Prints help information

    -V, --version    
            Prints version information


OPTIONS:
    -d, --datadir &amp;lt;DATADIR&amp;gt;    
            Sets the wallet data directory. Default value : &quot;~/.bdk-bitcoin

    -n, --network &amp;lt;NETWORK&amp;gt;    
            Sets the network [default: testnet]  [possible values: bitcoin, testnet, signet, regtest]


SUBCOMMANDS:
    compile    Compile a miniscript policy to an output descriptor
    help       Prints this message or the help of the given subcommand(s)
    key        Subcommands for Key operations
    repl       Options to configure a SOCKS5 proxy for a blockchain client connection
    wallet     Wallet subcommands that can be issued without a blockchain backend


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;step-1-seed-generate&quot;&gt;Step 1: Seed Generate&lt;/h2&gt;

&lt;h3 id=&quot;1a-mnemonic-word-list--xprv-exteneded-private-key-key&quot;&gt;1a: Mnemonic word-list + XPRV (Exteneded Private Key) :key:&lt;/h3&gt;

&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bdk-cli key generate | tee key.json&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
  &quot;fingerprint&quot;: &quot;42b15d2f&quot;,
  &quot;mnemonic&quot;: &quot;party salon worth satoshi envelope suggest garlic dry add pitch throw clap keen narrow antique oyster ketchup purchase gasp visual work venue fog crater&quot;,
  &quot;xprv&quot;: &quot;tprv8ZgxMBicQKsPdwpamtjqMFpYRTafnE1bN2SphLEybCtRKakk6S1TgQCsZgiBwJuJNWe3jYdgVCTsKf9weMxj6tW4zNNKWptykszJpS2L8wE&quot;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/ii62Hul.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;1b-save-xprv-extended-private-key-into-environment-variable&quot;&gt;1b: Save XPRV (Extended Private Key) into environment variable&lt;/h3&gt;
&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export XPRV_00=$(cat key.json | jq -r .xprv)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/KYW2Cdo.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;1c-verify-environment-variable-xprv_00-is-active&quot;&gt;1c: Verify environment variable XPRV_00 is active&lt;/h3&gt;
&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;env | grep XPRV&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/ZahbJwe.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;1d-create-descriptor-and-save-into-environment-variable&quot;&gt;1d: Create Descriptor and Save into environment variable&lt;/h3&gt;

&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export my_descriptor=&quot;wpkh($XPRV_00/84h/1h/0h/0/*)&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/UV4Vgsq.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;1e-verify-environment-variable-my_descriptor-is-active&quot;&gt;1e: Verify environment variable my_descriptor is active&lt;/h3&gt;

&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;env | grep my_descriptor&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/s7ZeRQN.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;step-2-generate-receive-address&quot;&gt;Step 2: Generate Receive-Address&lt;/h2&gt;

&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bdk-cli wallet --wallet wallet_name --descriptor $my_descriptor get_new_address&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/P8PjTAo.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; The output below confirms the command was successful.

{
  &quot;address&quot;: &quot;tb1qrh4sq5va0unqtxyfv8al9lz3sna3988cj59uya&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note: If you get the error below just delete the folder cache.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ rm -rf ~/./bdk_cli/&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;### ERROR PREVIEW 

[2022-12-16T04:12:26Z ERROR bdk_cli] Descriptor checksum mismatch. Are you using a different descriptor for an already defined wallet name? (if you are not specifying the wallet name it is automatically named based on the descriptor)


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This erases the cache files located in the bdk-cli binary folder.
Note: This happens when you name the wallet the same name as previous created wallet.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;step-3-send-testnet-bitcoin-to-the-newly-created-receive-address&quot;&gt;Step 3: Send testnet bitcoin to the newly created receive-address&lt;/h2&gt;

&lt;p&gt;These Testnet faucets allow you to send funds to your newly created address.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://testnet-faucet.mempool.co&quot;&gt;Bitcoin Testnet Faucet LINK#1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bitcoinfaucet.uo1.net&quot;&gt;Bitcoin Testnet Faucet LINK#2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;step-4-sync-the-wallet&quot;&gt;Step 4: Sync the wallet&lt;/h2&gt;

&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bdk-cli wallet --wallet wallet_name  --descriptor $my_descriptor sync&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The output below confirms the command was successful.

{}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/WFYBgVB.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;step-5-check-the-balance&quot;&gt;Step 5: Check the balance&lt;/h2&gt;

&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bdk-cli wallet --wallet wallet_name  --descriptor $my_descriptor get_balance &lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: The balance will only show after the transaction has been confirmed in a block at least once.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The output below confirms the command was successful:

{
  &quot;satoshi&quot;: 100000
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/v8MAYB2.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;step-6-create-transaction-psbt&quot;&gt;Step 6: Create Transaction (PSBT)&lt;/h2&gt;

&lt;p&gt;To create a PSBT (partially-signed-bitcoin-transaction) run  the command&lt;/p&gt;

&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bdk-cli wallet --wallet wallet_name --descriptor $my_descriptor create_tx --to mkHS9ne12qx9pS9VojpwU5xtRd4T7X7ZUt:50000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/EUCovcJ.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; The output below confirms the command was successful.

{
  &quot;details&quot;: {
    &quot;confirmation_time&quot;: null,
    &quot;fee&quot;: 113,
    &quot;received&quot;: 0,
    &quot;sent&quot;: 123000,
    &quot;transaction&quot;: null,
    &quot;txid&quot;: &quot;029173d76253e3441f9dc26f91e6ef30dff486848e91a7941f0cacd0af25ee30&quot;
  },
  &quot;psbt&quot;: &quot;cHNidP8BAFUBAAAAAak8uMR3UGkAGUKWsq8Mv45qg2fdD93JQRIsa2P0wFloAQAAAAD/////AQfgAQAAAAAAGXapFDRKD0jKFQ7CuQOBdmC5tosTpnAmiKwAAAAAAAEA3gIAAAAAAQFY9sVfEEbyjrHXSlxXDxL+71WOMnsPpVElwk+3E/J9vAAAAAAA/v///wIYZRIAAAAAABYAFBKYf7yF+ss6EFdw2rDZTfdLhep8eOABAAAAAAAWABQd6wBRnX8mBZiJYfvy/FGE+xKc+AJHMEQCIFSIkvEUI9yUgEw4JocRs1aiVsBlKKXrOQaQb3XFqR21AiBqiEVzCVVSRGjckyPDgAQBnOdSzBYR6Rw6KFcCP+E27wEhAwIlXdfM2WYnYa36Hp4MS6YkplBAgBsb1tYG9NiWFWTKzPYhAAEBH3jgAQAAAAAAFgAUHesAUZ1/JgWYiWH78vxRhPsSnPgiBgP80FpaWYQzGzCnNI9blXbei61YpAmtoezMRxpVvBJ6SxgTizKsVAAAgAEAAIAAAACAAAAAAAAAAAAAAA==&quot;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;6a-export-psbt-to-environment-variable&quot;&gt;6a: export PSBT to environment-variable&lt;/h3&gt;

&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export PSBT=&quot;PASTE_PSBT_HERE&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/CEDKcPZ.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;step-7-sign-transaction-psbt&quot;&gt;Step 7: Sign Transaction (PSBT)&lt;/h2&gt;

&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bdk-cli wallet --wallet wallet_name --descriptor $my_descriptor sign --psbt $PSBT&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;DON‚ÄôT FORGET to COPY the PSBT for the next step&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/f4o4Ce8.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The output below confirms the command was successful.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
  &quot;is_finalized&quot;: true,
  &quot;psbt&quot;: &quot;cHNidP8BAFUBAAAAAak8uMR3UGkAGUKWsq8Mv45qg2fdD93JQRIsa2P0wFloAQAAAAD/////AQfgAQAAAAAAGXapFDRKD0jKFQ7CuQOBdmC5tosTpnAmiKwAAAAAAAEA3gIAAAAAAQFY9sVfEEbyjrHXSlxXDxL+71WOMnsPpVElwk+3E/J9vAAAAAAA/v///wIYZRIAAAAAABYAFBKYf7yF+ss6EFdw2rDZTfdLhep8eOABAAAAAAAWABQd6wBRnX8mBZiJYfvy/FGE+xKc+AJHMEQCIFSIkvEUI9yUgEw4JocRs1aiVsBlKKXrOQaQb3XFqR21AiBqiEVzCVVSRGjckyPDgAQBnOdSzBYR6Rw6KFcCP+E27wEhAwIlXdfM2WYnYa36Hp4MS6YkplBAgBsb1tYG9NiWFWTKzPYhAAEBH3jgAQAAAAAAFgAUHesAUZ1/JgWYiWH78vxRhPsSnPgiAgP80FpaWYQzGzCnNI9blXbei61YpAmtoezMRxpVvBJ6S0gwRQIhALWkBRSJzxuf0od4tPu3qFmEfJ2Y+/QBGtfjSFObWsPeAiA4QJx8Rk5pacrjHv5EOdw6RNHXcdtepFs+m0/Za/h0UQEiBgP80FpaWYQzGzCnNI9blXbei61YpAmtoezMRxpVvBJ6SxgTizKsVAAAgAEAAIAAAACAAAAAAAAAAAABBwABCGwCSDBFAiEAtaQFFInPG5/Sh3i0+7eoWYR8nZj79AEa1+NIU5taw94CIDhAnHxGTmlpyuMe/kQ53DpE0ddx216kWz6bT9lr+HRRASED/NBaWlmEMxswpzSPW5V23outWKQJraHszEcaVbwSeksAAA==&quot;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;7a-export-signed-psbt-to-environment-variable&quot;&gt;7a: export signed psbt to environment variable&lt;/h3&gt;

&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export SIGNED_PSBT=&quot;Paste_PSBT_HERE&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/VJsl8zR.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;step-8-broadcast-transaction&quot;&gt;Step 8: Broadcast Transaction&lt;/h2&gt;

&lt;p&gt;$ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bdk-cli wallet --wallet wallet_name --descriptor $my_descriptor broadcast --psbt $SIGNED_ PSBT&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/yQZZk0d.gif&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The output below confirms the command was successful.

{
  &quot;txid&quot;: &quot;a0877b7ce91ea6d141ba63277673f5bdf0edfdd45f91a39ba1a1ace15f839b52&quot;
}
 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Verify transcation in the memory pool on testnet &lt;a href=&quot;https://mempool.space/testnet&quot;&gt;Mempool-testnet!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Finishing touch, run sync one more time and see that the balance has decreased.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;h3 id=&quot;other-tutorials--blog&quot;&gt;Other Tutorials / Blog&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.summerofbitcoin.org/sob-22-experience-bdk/&quot;&gt; My Summer of Bitcoin Experience&lt;/a&gt;
    &lt;h3 id=&quot;useful-links&quot;&gt;Useful links&lt;/h3&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki&quot;&gt;BIP-32:  Hierarchical Deterministic Wallets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki&quot;&gt;BIP: 39 - Mnemonic code for generating deterministic keys&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki&quot;&gt;BIP: 44 - Multi-Account Hierarchy for Deterministic Wallets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/bitcoin/bips/blob/master/bip-0084.mediawiki&quot;&gt;BIP: 84 - Derivation scheme for P2WPKH based accounts&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki&quot;&gt;BIP: 174 - Partially Signed Bitcoin Transaction Format&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.summerofbitcoin.org/miniscript-policy-descriptors-hidden-powers-of-bitcoin/&quot;&gt;What are Descriptors and miniscript?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://bitcoin.stackexchange.com/questions/97242/bip39-tool-bip32-extended-private-key-vs-bip32-root-key&quot;&gt;Master Private  Key and Extended Private Key&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://min.sc&quot;&gt;MinscA Miniscript-based scripting language for Bitcoin contracts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 

</feed>
